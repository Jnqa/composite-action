name: 'Hello World'
description: 'Greet someone'
inputs:
  who-to-greet:
    description: 'Who to greet'
    required: false
    default: 'World'
  file:
    description: 'some files'
    required: true 
  folder:
    description: 'folder & files to doings and upload and archieve'
    requred: true
outputs:
  file: 
    description: "fileexample"
    value: ${{ steps.fileexample.outputs.test }}
runs:
  using: "composite"
  steps: 
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash
    - run: echo os ${{runner.os}}
      shell: bash
    - id: fileexample
      run: |
        mkdir ./test/
        cat test.sh
        chmod 777 test.sh
        ls .
        cp ${{ inputs.file }} ./test/tested.sh
        ls ./test/
        cat ./test/tested.sh
        test=$(echo `cat ./test/tested.sh`)
        echo $test
      shell: bash
    - id: Archive and other
      run: |
        mkdir ./doings/
        mv ${{ inputs.folder }} /doings/
        cd ./doings
      shell: bash
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn
    - name: Build project
      run: yarn ci:build
    - name: Archive
      run: |
        pushd dist
        zip -r dist.zip *
        popd
    -run: ls . && ls ./doings/
